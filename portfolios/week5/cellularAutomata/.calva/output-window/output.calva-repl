; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "deps.edn"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: java -jar '/Users/carsonmarano/.vscode/extensions/betterthantomorrow.calva-2.0.335/deps.clj.jar' -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.0.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Jacking in...
; Hooking up nREPL sessions...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "deps.edn"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: java -jar '/Users/carsonmarano/.vscode/extensions/betterthantomorrow.calva-2.0.335/deps.clj.jar' -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.0.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉user꞉> 
nil
clj꞉cellularAutomata.cell꞉> 
#'cellularAutomata.cell/askRule
clj꞉cellularAutomata.cell꞉> 
#'cellularAutomata.cell/removeParentheses
clj꞉cellularAutomata.cell꞉> 
#'cellularAutomata.cell/convertRuleToBinary
clj꞉cellularAutomata.cell꞉> 
#'cellularAutomata.cell/getRules
clj꞉cellularAutomata.cell꞉> 
#'cellularAutomata.cell/createFirstRow
clj꞉cellularAutomata.cell꞉> 
#'cellularAutomata.cell/getNextRow
clj꞉cellularAutomata.cell꞉> 
#'cellularAutomata.cell/askNumRows
clj꞉cellularAutomata.cell꞉> 
#'cellularAutomata.cell/askLenRows
clj꞉cellularAutomata.cell꞉> 
#'cellularAutomata.cell/printRow
clj꞉cellularAutomata.cell꞉> 
#'cellularAutomata.cell/getCellularAutomata
clj꞉cellularAutomata.cell꞉> 
Please enter a rule number between 0 and 255: 
Please enter a number of rows (above 0): 
Please enter the number of cells per row (above 0): 
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □]
[□ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □]
[□ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □]
[□ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □]
[□ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □]
[□ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □]
[□ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■]
[□ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □]
[□ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■]
[□ □ □ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ □ □]
[□ □ □ ■ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ ■ □ □]
[□ □ ■ □ □ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ □ □ ■ □]
[□ ■ □ ■ □ ■ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ ■ □ ■ □ ■]
[□ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □]
[□ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □]
[□ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □]
[□ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □]
[□ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □]
[□ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □]
[□ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■]
[□ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □]
[□ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■]
[□ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □]
[□ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■]
[□ □ □ □ ■ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ ■ □ □ □]
[□ □ □ ■ □ ■ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ ■ □ ■ □ □]
[□ □ ■ □ □ □ ■ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ ■ □ □ □ ■ □]
[□ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ ■ □ ■ □ ■ □ ■]
[□ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □]
[□ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □]
[□ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □]
[□ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □]
[□ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □]
[□ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □]
[□ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■]
[□ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □]
[□ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ ■ □ ■ □ □ □ □ □ □ □ ■ □ ■ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■]
[□ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ ■ □ ■ □ □ □ ■ □ □ □ □ □ ■ □ □ □ ■ □ ■ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □]
[□ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □]
[□ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □]
[□ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■]
[□ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □]
[□ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □]
[□ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □]
[□ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □]
[□ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □]
[□ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □]
[□ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■]
[□ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □]
[□ ■ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ ■]
[□ □ ■ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ ■ □]
[□ ■ □ ■ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ ■ □ ■]
[□ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □]
[□ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □]
[□ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □]
[□ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □]
[□ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □]
[□ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■]
[□ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □]
[□ ■ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ ■]
[□ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □]
[□ □ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ □]
[□ □ ■ □ ■ □ □ □ □ □ □ □ ■ □ □ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ □ □ ■ □ □ □ □ □ □ □ ■ □ ■ □]
[□ ■ □ □ □ ■ □ □ □ □ □ ■ □ ■ □ ■ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ ■ □ ■ □ ■ □ □ □ □ □ ■ □ □ □ ■]
[□ □ ■ □ ■ □ ■ □ □ □ ■ □ □ □ □ □ ■ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ ■ □ □ □ □ □ ■ □ □ □ ■ □ ■ □ ■ □]
[□ ■ □ □ □ □ □ ■ □ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ □ □ □ □ ■]
[□ □ ■ □ □ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ □ □ ■ □]
[□ ■ □ ■ □ ■ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ ■ □ ■ □ ■]
[□ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □]
[□ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □]
[□ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □]
[□ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □]
[[0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 0 0 0]]
clj꞉cellularAutomata.cell꞉> 
Please enter a rule number between 0 and 255: 
Please enter a number of rows (above 0): 
Please enter the number of cells per row (above 0): 
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ □ □ □ □ □ □]
[□ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ □ □ □]
[□ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ ■ □ □ □ □ □]
[□ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □]
[□ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □]
[□ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □]
[□ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □]
[■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■]
[■ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ ■]
[■ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ ■ ■]
[□ □ ■ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ ■ □ □]
[□ ■ □ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ ■ □ ■ □]
[■ □ □ ■ ■ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ ■ ■ □ □ ■]
[■ ■ ■ ■ ■ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ ■ ■ ■ ■ ■ ■]
[□ □ □ □ □ □ ■ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ ■ □ □ □ □ □ □]
[□ □ □ □ □ ■ □ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ ■ □ ■ □ □ □ □ □]
[□ □ □ □ ■ □ □ ■ ■ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ ■ ■ □ □ ■ □ □ □ □]
[□ □ □ ■ □ ■ ■ ■ ■ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ ■ ■ ■ ■ ■ □ ■ □ □ □]
[□ □ ■ □ □ ■ □ □ □ □ ■ □ □ ■ □ □ □ □ □ □ □ ■ □ □ ■ □ □ □ □ ■ □ □ ■ □ □]
[□ ■ □ ■ ■ □ ■ □ □ ■ □ ■ ■ □ ■ □ □ □ □ □ ■ □ ■ ■ □ ■ □ □ ■ □ ■ ■ □ ■ □]
[■ □ □ ■ ■ □ □ ■ ■ □ □ ■ ■ □ □ ■ □ □ □ ■ □ □ ■ ■ □ □ ■ ■ □ □ ■ ■ □ □ ■]
[■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ □ ■ □ ■ □ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ ■ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ ■ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ ■ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ ■ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ ■ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ ■ □ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ □ ■ □ □ □ □ □ □ □]
[□ □ □ □ □ □ ■ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ ■ □ □ □ □ □ □]
[□ □ □ □ □ ■ □ ■ □ □ □ ■ □ ■ □ □ □ □ □ □ □ ■ □ ■ □ □ □ ■ □ ■ □ □ □ □ □]
[□ □ □ □ ■ □ □ □ ■ □ ■ □ □ □ ■ □ □ □ □ □ ■ □ □ □ ■ □ ■ □ □ □ ■ □ □ □ □]
[□ □ □ ■ □ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ □ □]
[□ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ ■ □ □ □ □ □ ■ □ □]
[□ ■ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ □ □ ■ □ ■ □]
[■ □ □ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ ■ □ □ □ ■]
[■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ ■]
[□ ■ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ ■ □]
[■ □ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ ■ ■ □ ■]
[[1 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 1]]
clj꞉cellularAutomata.cell꞉> 
Please enter a rule number between 0 and 255: 
Please enter a number of rows (above 0): 
Please enter the number of cells per row (above 0): 
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ □ ■ ■ ■ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ □ ■ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ □ ■ ■ ■ □ □ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ □ ■ ■ □ ■ □ ■ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ □ ■ ■ ■ ■ ■ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ □ ■ ■ □ □ □ □ □ ■ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ □ ■ ■ ■ □ □ □ □ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ □ ■ ■ □ ■ □ □ □ ■ ■ ■ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ □ ■ ■ ■ ■ ■ □ □ ■ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ □ ■ ■ □ □ □ ■ □ ■ ■ ■ □ □ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ □ ■ ■ ■ □ □ ■ ■ ■ ■ □ ■ □ ■ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ □ ■ ■ □ ■ □ ■ ■ □ □ ■ ■ ■ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[□ ■ ■ ■ ■ ■ ■ ■ ■ □ ■ ■ □ □ □ ■ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[■ ■ □ □ □ □ □ □ ■ ■ ■ ■ □ □ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □]
[■ ■ □ □ □ □ □ ■ ■ □ □ ■ □ ■ ■ ■ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■]
[□ ■ □ □ □ □ ■ ■ ■ □ ■ ■ ■ ■ □ □ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ ■]
[■ ■ □ □ □ ■ ■ □ ■ ■ ■ □ □ ■ □ □ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ ■ ■]
[□ ■ □ □ ■ ■ ■ ■ ■ □ ■ □ ■ ■ □ ■ ■ ■ □ □ □ □ □ □ □ □ □ □ □ □ □ ■ ■ □ □]
[■ ■ □ ■ ■ □ □ □ ■ ■ ■ ■ ■ ■ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ □ □ ■ ■ ■ □ □]
[■ ■ ■ ■ ■ □ □ ■ ■ □ □ □ □ □ □ ■ ■ ■ □ □ □ □ □ □ □ □ □ □ □ ■ ■ □ ■ □ ■]
[□ □ □ □ ■ □ ■ ■ ■ □ □ □ □ □ ■ ■ □ ■ □ □ □ □ □ □ □ □ □ □ ■ ■ ■ ■ ■ ■ ■]
[□ □ □ ■ ■ ■ ■ □ ■ □ □ □ □ ■ ■ ■ ■ ■ □ □ □ □ □ □ □ □ □ ■ ■ □ □ □ □ □ ■]
[□ □ ■ ■ □ □ ■ ■ ■ □ □ □ ■ ■ □ □ □ ■ □ □ □ □ □ □ □ □ ■ ■ ■ □ □ □ □ ■ ■]
[□ ■ ■ ■ □ ■ ■ □ ■ □ □ ■ ■ ■ □ □ ■ ■ □ □ □ □ □ □ □ ■ ■ □ ■ □ □ □ ■ ■ ■]
[■ ■ □ ■ ■ ■ ■ ■ ■ □ ■ ■ □ ■ □ ■ ■ ■ □ □ □ □ □ □ ■ ■ ■ ■ ■ □ □ ■ ■ □ ■]
[□ ■ ■ ■ □ □ □ □ ■ ■ ■ ■ ■ ■ ■ ■ □ ■ □ □ □ □ □ ■ ■ □ □ □ ■ □ ■ ■ ■ ■ ■]
[■ ■ □ ■ □ □ □ ■ ■ □ □ □ □ □ □ ■ ■ ■ □ □ □ □ ■ ■ ■ □ □ ■ ■ ■ ■ □ □ □ ■]
[□ ■ ■ ■ □ □ ■ ■ ■ □ □ □ □ □ ■ ■ □ ■ □ □ □ ■ ■ □ ■ □ ■ ■ □ □ ■ □ □ ■ ■]
[■ ■ □ ■ □ ■ ■ □ ■ □ □ □ □ ■ ■ ■ ■ ■ □ □ ■ ■ ■ ■ ■ ■ ■ ■ □ ■ ■ □ ■ ■ ■]
[□ ■ ■ ■ ■ ■ ■ ■ ■ □ □ □ ■ ■ □ □ □ ■ □ ■ ■ □ □ □ □ □ □ ■ ■ ■ ■ ■ ■ □ □]
[■ ■ □ □ □ □ □ □ ■ □ □ ■ ■ ■ □ □ ■ ■ ■ ■ ■ □ □ □ □ □ ■ ■ □ □ □ □ ■ □ □]
[■ ■ □ □ □ □ □ ■ ■ □ ■ ■ □ ■ □ ■ ■ □ □ □ ■ □ □ □ □ ■ ■ ■ □ □ □ ■ ■ □ ■]
[□ ■ □ □ □ □ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ □ □ ■ ■ □ □ □ ■ ■ □ ■ □ □ ■ ■ ■ ■ ■]
[■ ■ □ □ □ ■ ■ □ □ □ □ □ □ □ □ □ ■ □ ■ ■ ■ □ □ ■ ■ ■ ■ ■ □ ■ ■ □ □ □ ■]
[□ ■ □ □ ■ ■ ■ □ □ □ □ □ □ □ □ ■ ■ ■ ■ □ ■ □ ■ ■ □ □ □ ■ ■ ■ ■ □ □ ■ ■]
[■ ■ □ ■ ■ □ ■ □ □ □ □ □ □ □ ■ ■ □ □ ■ ■ ■ ■ ■ ■ □ □ ■ ■ □ □ ■ □ ■ ■ ■]
[□ ■ ■ ■ ■ ■ ■ □ □ □ □ □ □ ■ ■ ■ □ ■ ■ □ □ □ □ ■ □ ■ ■ ■ □ ■ ■ ■ ■ □ □]
[■ ■ □ □ □ □ ■ □ □ □ □ □ ■ ■ □ ■ ■ ■ ■ □ □ □ ■ ■ ■ ■ □ ■ ■ ■ □ □ ■ □ □]
[■ ■ □ □ □ ■ ■ □ □ □ □ ■ ■ ■ ■ ■ □ □ ■ □ □ ■ ■ □ □ ■ ■ ■ □ ■ □ ■ ■ □ ■]
[□ ■ □ □ ■ ■ ■ □ □ □ ■ ■ □ □ □ ■ □ ■ ■ □ ■ ■ ■ □ ■ ■ □ ■ ■ ■ ■ ■ ■ ■ ■]
[■ ■ □ ■ ■ □ ■ □ □ ■ ■ ■ □ □ ■ ■ ■ ■ ■ ■ ■ □ ■ ■ ■ ■ ■ ■ □ □ □ □ □ □ ■]
[□ ■ ■ ■ ■ ■ ■ □ ■ ■ □ ■ □ ■ ■ □ □ □ □ □ ■ ■ ■ □ □ □ □ ■ □ □ □ □ □ ■ ■]
[■ ■ □ □ □ □ ■ ■ ■ ■ ■ ■ ■ ■ ■ □ □ □ □ ■ ■ □ ■ □ □ □ ■ ■ □ □ □ □ ■ ■ ■]
[□ ■ □ □ □ ■ ■ □ □ □ □ □ □ □ ■ □ □ □ ■ ■ ■ ■ ■ □ □ ■ ■ ■ □ □ □ ■ ■ □ □]
[■ ■ □ □ ■ ■ ■ □ □ □ □ □ □ ■ ■ □ □ ■ ■ □ □ □ ■ □ ■ ■ □ ■ □ □ ■ ■ ■ □ □]
[■ ■ □ ■ ■ □ ■ □ □ □ □ □ ■ ■ ■ □ ■ ■ ■ □ □ ■ ■ ■ ■ ■ ■ ■ □ ■ ■ □ ■ □ ■]
[[1 1 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 1]]
clj꞉cellularAutomata.cell꞉> 
; nREPL Connection was closed
